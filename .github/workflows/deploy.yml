name: deploy
on:
  workflow_run:
    workflows: ["docker-publish"]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: SSH into droplet and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          envs: GHCR_USER,GHCR_PAT
          script: |
            set -euxo pipefail
            cd /opt/hypeatlas

            # (Opcional) login a GHCR si las imágenes son privadas
            if [ -n "${GHCR_PAT:-}" ]; then
              echo "$GHCR_PAT" | docker login ghcr.io -u "${GHCR_USER:-${USER}}" --password-stdin
            fi

            # Asegurar que el archivo de entorno existe
            test -f .env.prod

            # Pull y recreate con env-file explícito
            docker compose -f docker-compose.prod.yml --env-file .env.prod pull
            docker compose -f docker-compose.prod.yml --env-file .env.prod up -d --force-recreate --remove-orphans

            # Esperar a que hypeatlas-api quede healthy (máx 120s)
            timeout 120s bash -c '
              until [ "$(docker inspect -f "{{.State.Health.Status}}" hypeatlas-api 2>/dev/null)" = "healthy" ]; do
                docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
                sleep 3
              done
            '

            # Sanity HTTP local (el compose publica en 127.0.0.1:8080)
            curl -fsS http://127.0.0.1:8080/healthz

            # Limpieza ligera
            docker image prune -f || true
      - name: Dump logs if failed
        if: failure()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: false
          script: |
            set -x
            cd /opt/hypeatlas || exit 0
            docker compose -f docker-compose.prod.yml ps || true
            docker compose -f docker-compose.prod.yml logs --since=20m api || true
